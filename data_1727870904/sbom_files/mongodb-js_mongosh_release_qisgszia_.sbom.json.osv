{
  "results": [
    {
      "source": {
        "path": "/home/ooe/sbom_scanning/v2/data_1727870904/sbom_files/mongodb-js_mongosh_release_qisgszia_.sbom.json",
        "type": "sbom"
      },
      "packages": [
        {
          "package": {
            "name": "body-parser",
            "version": "1.20.2",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-10T19:01:08Z",
              "published": "2024-09-10T15:52:39Z",
              "schema_version": "1.6.0",
              "id": "GHSA-qwcr-r2fm-qrc7",
              "aliases": [
                "CVE-2024-45590"
              ],
              "related": [
                "CGA-fh9q-m32j-c356",
                "CGA-wr33-h89w-rmmm"
              ],
              "summary": "body-parser vulnerable to denial of service when url encoding is enabled",
              "details": "### Impact\n\nbody-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References\n",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "body-parser",
                    "purl": "pkg:npm/body-parser"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "1.20.3"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-qwcr-r2fm-qrc7/GHSA-qwcr-r2fm-qrc7.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/body-parser/security/advisories/GHSA-qwcr-r2fm-qrc7"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-45590"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/body-parser/commit/b2695c4450f06ba3b0ccf48d872a229bb41c9bce"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/expressjs/body-parser"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-405"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-10T15:52:39Z",
                "nvd_published_at": "2024-09-10T16:15:21Z",
                "severity": "HIGH"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-qwcr-r2fm-qrc7"
              ],
              "aliases": [
                "CVE-2024-45590",
                "GHSA-qwcr-r2fm-qrc7"
              ],
              "max_severity": "8.7"
            }
          ]
        },
        {
          "package": {
            "name": "cookie",
            "version": "0.4.2",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-10-04T20:57:03Z",
              "published": "2024-10-04T20:31:00Z",
              "schema_version": "1.6.0",
              "id": "GHSA-pxg6-pf52-xh8x",
              "aliases": [
                "CVE-2024-47764"
              ],
              "related": [
                "CGA-56hq-34m4-pgc5",
                "CGA-hchv-5xpf-mwj3"
              ],
              "summary": "cookie accepts cookie name, path, and domain with out of bounds characters",
              "details": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=\u003cscript\u003ealert('XSS3')\u003c/script\u003e; Max-Age=2592000; a\", value)` would result in `\"userName=\u003cscript\u003ealert('XSS3')\u003c/script\u003e; Max-Age=2592000; a=test\"`, setting `userName` cookie to `\u003cscript\u003e` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "cookie",
                    "purl": "pkg:npm/cookie"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "0.7.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-pxg6-pf52-xh8x/GHSA-pxg6-pf52-xh8x.json"
                  }
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/jshttp/cookie/pull/167"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/jshttp/cookie"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-74"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-10-04T20:31:00Z",
                "nvd_published_at": null,
                "severity": "LOW"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-pxg6-pf52-xh8x"
              ],
              "aliases": [
                "CVE-2024-47764",
                "GHSA-pxg6-pf52-xh8x"
              ],
              "max_severity": ""
            }
          ]
        },
        {
          "package": {
            "name": "cookie",
            "version": "0.6.0",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-10-04T20:57:03Z",
              "published": "2024-10-04T20:31:00Z",
              "schema_version": "1.6.0",
              "id": "GHSA-pxg6-pf52-xh8x",
              "aliases": [
                "CVE-2024-47764"
              ],
              "related": [
                "CGA-56hq-34m4-pgc5",
                "CGA-hchv-5xpf-mwj3"
              ],
              "summary": "cookie accepts cookie name, path, and domain with out of bounds characters",
              "details": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=\u003cscript\u003ealert('XSS3')\u003c/script\u003e; Max-Age=2592000; a\", value)` would result in `\"userName=\u003cscript\u003ealert('XSS3')\u003c/script\u003e; Max-Age=2592000; a=test\"`, setting `userName` cookie to `\u003cscript\u003e` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "cookie",
                    "purl": "pkg:npm/cookie"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "0.7.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-pxg6-pf52-xh8x/GHSA-pxg6-pf52-xh8x.json"
                  }
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/jshttp/cookie/security/advisories/GHSA-pxg6-pf52-xh8x"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/jshttp/cookie/pull/167"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/jshttp/cookie/commit/e10042845354fea83bd8f34af72475eed1dadf5c"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/jshttp/cookie"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-74"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-10-04T20:31:00Z",
                "nvd_published_at": null,
                "severity": "LOW"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-pxg6-pf52-xh8x"
              ],
              "aliases": [
                "CVE-2024-47764",
                "GHSA-pxg6-pf52-xh8x"
              ],
              "max_severity": ""
            }
          ]
        },
        {
          "package": {
            "name": "dset",
            "version": "3.1.3",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-11T23:27:32Z",
              "published": "2024-09-11T06:30:39Z",
              "schema_version": "1.6.0",
              "id": "GHSA-f6v4-cf5j-vf3w",
              "aliases": [
                "CVE-2024-21529"
              ],
              "summary": "dset Prototype Pollution vulnerability",
              "details": "Versions of the package dset before 3.1.4 are vulnerable to Prototype Pollution via the dset function due improper user input sanitization. This vulnerability allows the attacker to inject malicious object property using the built-in Object property __proto__, which is recursively assigned to all the objects in the program.",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "dset",
                    "purl": "pkg:npm/dset"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "3.1.4"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-f6v4-cf5j-vf3w/GHSA-f6v4-cf5j-vf3w.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:L"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:L/SC:N/SI:N/SA:N"
                }
              ],
              "references": [
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-21529"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/lukeed/dset/commit/16d6154e085bef01e99f01330e5a421a7f098afa"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/lukeed/dset"
                },
                {
                  "type": "WEB",
                  "url": "https://security.snyk.io/vuln/SNYK-JS-DSET-7116691"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-1321"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-11T23:11:10Z",
                "nvd_published_at": "2024-09-11T05:15:02Z",
                "severity": "HIGH"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-f6v4-cf5j-vf3w"
              ],
              "aliases": [
                "CVE-2024-21529",
                "GHSA-f6v4-cf5j-vf3w"
              ],
              "max_severity": "8.8"
            }
          ]
        },
        {
          "package": {
            "name": "express",
            "version": "4.19.2",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-10T19:57:33Z",
              "published": "2024-09-10T19:41:04Z",
              "schema_version": "1.6.0",
              "id": "GHSA-qw6h-vgh9-j6wx",
              "aliases": [
                "CVE-2024-43796"
              ],
              "related": [
                "CGA-8w92-879x-f9wc",
                "CGA-jq8v-jx6x-3fpc"
              ],
              "summary": "express vulnerable to XSS via response.redirect()",
              "details": "### Impact\n\nIn express \u003c4.20.0, passing untrusted user input - even after sanitizing it - to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "express",
                    "purl": "pkg:npm/express"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "4.20.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-qw6h-vgh9-j6wx/GHSA-qw6h-vgh9-j6wx.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "express",
                    "purl": "pkg:npm/express"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "5.0.0-alpha.1"
                        },
                        {
                          "fixed": "5.0.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-qw6h-vgh9-j6wx/GHSA-qw6h-vgh9-j6wx.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:L/SI:L/SA:L"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/express/security/advisories/GHSA-qw6h-vgh9-j6wx"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43796"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/express/commit/54271f69b511fea198471e6ff3400ab805d6b553"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/expressjs/express"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-79"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-10T19:41:04Z",
                "nvd_published_at": "2024-09-10T15:15:17Z",
                "severity": "MODERATE"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-qw6h-vgh9-j6wx"
              ],
              "aliases": [
                "CVE-2024-43796",
                "GHSA-qw6h-vgh9-j6wx"
              ],
              "max_severity": "5.0"
            }
          ]
        },
        {
          "package": {
            "name": "ip",
            "version": "1.1.9",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-03T19:59:01Z",
              "published": "2024-06-02T22:29:29Z",
              "schema_version": "1.6.0",
              "id": "GHSA-2p57-rm9w-gvfp",
              "aliases": [
                "CVE-2024-29415"
              ],
              "related": [
                "CGA-v7m6-h44m-vrvg"
              ],
              "summary": "ip SSRF improper categorization in isPublic",
              "details": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "ip",
                    "purl": "pkg:npm/ip"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "last_affected": "2.0.1"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/06/GHSA-2p57-rm9w-gvfp/GHSA-2p57-rm9w-gvfp.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
                }
              ],
              "references": [
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-29415"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/indutny/node-ip/issues/150"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/indutny/node-ip/pull/143"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/indutny/node-ip/pull/144"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/indutny/node-ip"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-918"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-06-02T22:29:29Z",
                "nvd_published_at": "2024-05-27T20:15:08Z",
                "severity": "HIGH"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-2p57-rm9w-gvfp"
              ],
              "aliases": [
                "CVE-2024-29415",
                "GHSA-2p57-rm9w-gvfp"
              ],
              "max_severity": "8.1"
            }
          ]
        },
        {
          "package": {
            "name": "path-to-regexp",
            "version": "0.1.7",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-12T17:09:42Z",
              "published": "2024-09-09T20:19:15Z",
              "schema_version": "1.6.0",
              "id": "GHSA-9wv6-86v2-598j",
              "aliases": [
                "CVE-2024-45296"
              ],
              "related": [
                "CGA-6792-m89f-pxqr",
                "CGA-9whg-c95h-926g",
                "CGA-hvqq-cfqx-vpqj",
                "CGA-m4g6-hwg9-252j",
                "CGA-x8g8-9rwj-j985"
              ],
              "summary": "path-to-regexp outputs backtracking regular expressions",
              "details": "### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)\n- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)\n- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)\n- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0.2.0"
                        },
                        {
                          "fixed": "1.9.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "0.1.10"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "7.0.0"
                        },
                        {
                          "fixed": "8.0.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "2.0.0"
                        },
                        {
                          "fixed": "3.3.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "4.0.0"
                        },
                        {
                          "fixed": "6.3.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-45296"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/pillarjs/path-to-regexp"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-1333"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-09T20:19:15Z",
                "nvd_published_at": "2024-09-09T19:15:13Z",
                "severity": "HIGH"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-9wv6-86v2-598j"
              ],
              "aliases": [
                "CVE-2024-45296",
                "GHSA-9wv6-86v2-598j"
              ],
              "max_severity": "7.7"
            }
          ]
        },
        {
          "package": {
            "name": "path-to-regexp",
            "version": "1.8.0",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-12T17:09:42Z",
              "published": "2024-09-09T20:19:15Z",
              "schema_version": "1.6.0",
              "id": "GHSA-9wv6-86v2-598j",
              "aliases": [
                "CVE-2024-45296"
              ],
              "related": [
                "CGA-6792-m89f-pxqr",
                "CGA-9whg-c95h-926g",
                "CGA-hvqq-cfqx-vpqj",
                "CGA-m4g6-hwg9-252j",
                "CGA-x8g8-9rwj-j985"
              ],
              "summary": "path-to-regexp outputs backtracking regular expressions",
              "details": "### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)\n- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)\n- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)\n- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0.2.0"
                        },
                        {
                          "fixed": "1.9.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "0.1.10"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "7.0.0"
                        },
                        {
                          "fixed": "8.0.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "2.0.0"
                        },
                        {
                          "fixed": "3.3.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "path-to-regexp",
                    "purl": "pkg:npm/path-to-regexp"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "4.0.0"
                        },
                        {
                          "fixed": "6.3.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-45296"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/925ac8e3c5780b02f58cbd4e52f95da8ad2ac485"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/d31670ae8f6e69cbfd56e835742195b7d10942ef"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/commit/f1253b47b347dcb909e3e80b0eb2649109e59894"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/pillarjs/path-to-regexp"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-1333"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-09T20:19:15Z",
                "nvd_published_at": "2024-09-09T19:15:13Z",
                "severity": "HIGH"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-9wv6-86v2-598j"
              ],
              "aliases": [
                "CVE-2024-45296",
                "GHSA-9wv6-86v2-598j"
              ],
              "max_severity": "7.7"
            }
          ]
        },
        {
          "package": {
            "name": "send",
            "version": "0.18.0",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-10T19:57:33Z",
              "published": "2024-09-10T19:42:41Z",
              "schema_version": "1.6.0",
              "id": "GHSA-m6fv-jmcg-4jfg",
              "aliases": [
                "CVE-2024-43799"
              ],
              "related": [
                "CGA-4g7r-gq6m-3fjw",
                "CGA-9cw3-8w4j-827w",
                "CGA-jgr3-p9cq-fqjh"
              ],
              "summary": "send vulnerable to template injection that can lead to XSS",
              "details": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "send",
                    "purl": "pkg:npm/send"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "0.19.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-m6fv-jmcg-4jfg/GHSA-m6fv-jmcg-4jfg.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:L/SI:L/SA:L"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/send/security/advisories/GHSA-m6fv-jmcg-4jfg"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43799"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/pillarjs/send/commit/ae4f2989491b392ae2ef3b0015a019770ae65d35"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/pillarjs/send"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-79"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-10T19:42:41Z",
                "nvd_published_at": "2024-09-10T15:15:17Z",
                "severity": "MODERATE"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-m6fv-jmcg-4jfg"
              ],
              "aliases": [
                "CVE-2024-43799",
                "GHSA-m6fv-jmcg-4jfg"
              ],
              "max_severity": "5.0"
            }
          ]
        },
        {
          "package": {
            "name": "serve-static",
            "version": "1.15.0",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-09-10T19:57:33Z",
              "published": "2024-09-10T19:42:33Z",
              "schema_version": "1.6.0",
              "id": "GHSA-cm22-4g7w-348p",
              "aliases": [
                "CVE-2024-43800"
              ],
              "related": [
                "CGA-6mjq-8vxm-wf5h",
                "CGA-wq6m-hw6r-4r4g"
              ],
              "summary": "serve-static vulnerable to template injection that can lead to XSS",
              "details": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve-static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "serve-static",
                    "purl": "pkg:npm/serve-static"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "0"
                        },
                        {
                          "fixed": "1.16.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-cm22-4g7w-348p/GHSA-cm22-4g7w-348p.json"
                  }
                },
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "serve-static",
                    "purl": "pkg:npm/serve-static"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "2.0.0"
                        },
                        {
                          "fixed": "2.1.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-cm22-4g7w-348p/GHSA-cm22-4g7w-348p.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:P/VC:N/VI:N/VA:N/SC:L/SI:L/SA:L"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/serve-static/security/advisories/GHSA-cm22-4g7w-348p"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43800"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/serve-static/commit/0c11fad159898cdc69fd9ab63269b72468ecaf6b"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/expressjs/serve-static/commit/ce730896fddce1588111d9ef6fdf20896de5c6fa"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/expressjs/serve-static"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-79"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-09-10T19:42:33Z",
                "nvd_published_at": "2024-09-10T15:15:17Z",
                "severity": "MODERATE"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-cm22-4g7w-348p"
              ],
              "aliases": [
                "CVE-2024-43800",
                "GHSA-cm22-4g7w-348p"
              ],
              "max_severity": "5.0"
            }
          ]
        },
        {
          "package": {
            "name": "webpack",
            "version": "5.83.0",
            "ecosystem": "npm"
          },
          "vulnerabilities": [
            {
              "modified": "2024-10-08T04:26:56Z",
              "published": "2024-08-27T19:50:40Z",
              "schema_version": "1.6.0",
              "id": "GHSA-4vvj-4cpr-p986",
              "aliases": [
                "CVE-2024-43788",
                "CVE-2024-45389",
                "CVE-2024-45812",
                "GHSA-64vr-g452-qvp3",
                "GHSA-gprj-6m2f-j9hx"
              ],
              "related": [
                "CGA-9rjf-f92q-2cm7",
                "CGA-h43v-8hrp-cpgc"
              ],
              "summary": "Webpack's AutoPublicPathRuntimeModule has a DOM Clobbering Gadget that leads to XSS",
              "details": "### Summary\n\nWe discovered a DOM Clobbering vulnerability in Webpack’s `AutoPublicPathRuntimeModule`. The DOM Clobbering gadget in the module can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an `img` tag with an unsanitized `name` attribute) are present.\n\nWe found the real-world exploitation of this gadget in the Canvas LMS which allows XSS attack happens through an javascript code compiled by Webpack (the vulnerable part is from Webpack). We believe this is a severe issue. If Webpack’s code is not resilient to DOM Clobbering attacks, it could lead to significant security vulnerabilities in any web application using Webpack-compiled code.\n\n\n### Details\n\n#### Backgrounds\n\nDOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code) living in the existing javascript code to transform it into executable code. More for information about DOM Clobbering, here are some references:\n\n[1] https://scnps.co/papers/sp23_domclob.pdf\n[2] https://research.securitum.com/xss-in-amp4email-dom-clobbering/\n\n\n#### Gadgets found in Webpack\n\nWe identified a DOM Clobbering vulnerability in Webpack’s `AutoPublicPathRuntimeModule`. When the `output.publicPath` field in the configuration is not set or is set to `auto`, the following code is generated in the bundle to dynamically resolve and load additional JavaScript files:\n\n```\n/******/ \t/* webpack/runtime/publicPath */\n/******/ \t(() =\u003e {\n/******/ \t\tvar scriptUrl;\n/******/ \t\tif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\n/******/ \t\tvar document = __webpack_require__.g.document;\n/******/ \t\tif (!scriptUrl \u0026\u0026 document) {\n/******/ \t\t\tif (document.currentScript)\n/******/ \t\t\t\tscriptUrl = document.currentScript.src;\n/******/ \t\t\tif (!scriptUrl) {\n/******/ \t\t\t\tvar scripts = document.getElementsByTagName(\"script\");\n/******/ \t\t\t\tif(scripts.length) {\n/******/ \t\t\t\t\tvar i = scripts.length - 1;\n/******/ \t\t\t\t\twhile (i \u003e -1 \u0026\u0026 (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\t// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n/******/ \t\t// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\n/******/ \t\tif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\n/******/ \t\tscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n/******/ \t\t__webpack_require__.p = scriptUrl;\n/******/ \t})();\n```\n\nHowever, this code is vulnerable to a DOM Clobbering attack. The lookup on the line with `document.currentScript` can be shadowed by an attacker, causing it to return an attacker-controlled HTML element instead of the current script element as intended. In such a scenario, the `src` attribute of the attacker-controlled element will be used as the `scriptUrl` and assigned to `__webpack_require__.p`. If additional scripts are loaded from the server, `__webpack_require__.p` will be used as the base URL, pointing to the attacker's domain. This could lead to arbitrary script loading from the attacker's server, resulting in severe security risks.\n\n### PoC\n\nPlease note that we have identified a real-world exploitation of this vulnerability in the Canvas LMS. Once the issue has been patched, I am willing to share more details on the exploitation. For now, I’m providing a demo to illustrate the concept.\n\nConsider a website developer with the following two scripts, `entry.js` and `import1.js`, that are compiled using Webpack:\n\n```\n// entry.js\nimport('./import1.js')\n  .then(module =\u003e {\n    module.hello();\n  })\n  .catch(err =\u003e {\n    console.error('Failed to load module', err);\n  });\n```\n\n```\n// import1.js\nexport function hello () {\n  console.log('Hello');\n}\n```\n\nThe webpack.config.js is set up as follows:\n```\nconst path = require('path');\n\nmodule.exports = {\n  entry: './entry.js', // Ensure the correct path to your entry file\n  output: {\n    filename: 'webpack-gadgets.bundle.js', // Output bundle file\n    path: path.resolve(__dirname, 'dist'), // Output directory\n    publicPath: \"auto\", // Or leave this field not set\n  },\n  target: 'web',\n  mode: 'development',\n};\n```\n\nWhen the developer builds these scripts into a bundle and adds it to a webpage, the page could load the `import1.js` file from the attacker's domain, `attacker.controlled.server`. The attacker only needs to insert an `img` tag with the `name` attribute set to `currentScript`. This can be done through a website's feature that allows users to embed certain script-less HTML (e.g., markdown renderers, web email clients, forums) or via an HTML injection vulnerability in third-party JavaScript loaded on the page.\n\n```\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n  \u003ctitle\u003eWebpack Example\u003c/title\u003e\n  \u003c!-- Attacker-controlled Script-less HTML Element starts--!\u003e\n  \u003cimg name=\"currentScript\" src=\"https://attacker.controlled.server/\"\u003e\u003c/img\u003e\n  \u003c!-- Attacker-controlled Script-less HTML Element ends--!\u003e\n\u003c/head\u003e\n\u003cscript src=\"./dist/webpack-gadgets.bundle.js\"\u003e\u003c/script\u003e\n\u003cbody\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n### Impact\n\nThis vulnerability can lead to cross-site scripting (XSS) on websites that include Webpack-generated files and allow users to inject certain scriptless HTML tags with improperly sanitized name or id attributes.\n\n### Patch\n\nA possible patch to this vulnerability could refer to the Google Closure project which makes itself resistant to DOM Clobbering attack: https://github.com/google/closure-library/blob/b312823ec5f84239ff1db7526f4a75cba0420a33/closure/goog/base.js#L174\n\n```\n/******/ \t/* webpack/runtime/publicPath */\n/******/ \t(() =\u003e {\n/******/ \t\tvar scriptUrl;\n/******/ \t\tif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\n/******/ \t\tvar document = __webpack_require__.g.document;\n/******/ \t\tif (!scriptUrl \u0026\u0026 document) {\n/******/ \t\t\tif (document.currentScript \u0026\u0026 document.currentScript.tagName.toUpperCase() === 'SCRIPT') // Assume attacker cannot control script tag, otherwise it is XSS already :\u003e\n/******/ \t\t\t\tscriptUrl = document.currentScript.src;\n/******/ \t\t\tif (!scriptUrl) {\n/******/ \t\t\t\tvar scripts = document.getElementsByTagName(\"script\");\n/******/ \t\t\t\tif(scripts.length) {\n/******/ \t\t\t\t\tvar i = scripts.length - 1;\n/******/ \t\t\t\t\twhile (i \u003e -1 \u0026\u0026 (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\t// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n/******/ \t\t// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\n/******/ \t\tif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\n/******/ \t\tscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n/******/ \t\t__webpack_require__.p = scriptUrl;\n/******/ \t})();\n```\n\nPlease note that if we do not receive a response from the development team within three months, we will disclose this vulnerability to the CVE agent.",
              "affected": [
                {
                  "package": {
                    "ecosystem": "npm",
                    "name": "webpack",
                    "purl": "pkg:npm/webpack"
                  },
                  "ranges": [
                    {
                      "type": "SEMVER",
                      "events": [
                        {
                          "introduced": "5.0.0-alpha.0"
                        },
                        {
                          "fixed": "5.94.0"
                        }
                      ]
                    }
                  ],
                  "database_specific": {
                    "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/08/GHSA-4vvj-4cpr-p986/GHSA-4vvj-4cpr-p986.json"
                  }
                }
              ],
              "severity": [
                {
                  "type": "CVSS_V3",
                  "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:H"
                },
                {
                  "type": "CVSS_V4",
                  "score": "CVSS:4.0/AV:N/AC:L/AT:P/PR:L/UI:N/VC:L/VI:L/VA:H/SC:N/SI:N/SA:N"
                }
              ],
              "references": [
                {
                  "type": "WEB",
                  "url": "https://github.com/webpack/webpack/security/advisories/GHSA-4vvj-4cpr-p986"
                },
                {
                  "type": "ADVISORY",
                  "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-43788"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/webpack/webpack/issues/18718#issuecomment-2326296270"
                },
                {
                  "type": "WEB",
                  "url": "https://github.com/webpack/webpack/commit/955e057abc6cc83cbc3fa1e1ef67a49758bf5a61"
                },
                {
                  "type": "PACKAGE",
                  "url": "https://github.com/webpack/webpack"
                },
                {
                  "type": "WEB",
                  "url": "https://research.securitum.com/xss-in-amp4email-dom-clobbering"
                },
                {
                  "type": "WEB",
                  "url": "https://scnps.co/papers/sp23_domclob.pdf"
                }
              ],
              "database_specific": {
                "cwe_ids": [
                  "CWE-79"
                ],
                "github_reviewed": true,
                "github_reviewed_at": "2024-08-27T19:50:40Z",
                "nvd_published_at": "2024-08-27T17:15:07Z",
                "severity": "MODERATE"
              }
            }
          ],
          "groups": [
            {
              "ids": [
                "GHSA-4vvj-4cpr-p986"
              ],
              "aliases": [
                "CVE-2024-43788",
                "CVE-2024-45389",
                "CVE-2024-45812",
                "GHSA-4vvj-4cpr-p986",
                "GHSA-64vr-g452-qvp3",
                "GHSA-gprj-6m2f-j9hx"
              ],
              "max_severity": "6.4"
            }
          ]
        }
      ]
    }
  ],
  "experimental_config": {
    "licenses": {
      "summary": false,
      "allowlist": null
    }
  }
}
